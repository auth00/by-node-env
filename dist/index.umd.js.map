{"version":3,"file":"index.umd.js","sources":["../src/index.ts"],"sourcesContent":["import fs from 'fs';\nimport path from 'path';\n\nimport dotenv from 'dotenv';\nimport execa from 'execa';\nimport preferredPM from 'preferred-pm';\nimport readPkgUp from 'read-pkg-up';\nimport whichPMRuns from 'which-pm-runs';\n\nconst getNodeEnv = ({\n  cwd,\n  env,\n  envFile,\n}: {\n  cwd: string;\n  env: NodeJS.ProcessEnv;\n  envFile?: string;\n}) => {\n  if (env.NODE_ENV) {\n    return env.NODE_ENV;\n  }\n\n  if (envFile) {\n    const envPath = path.isAbsolute(envFile)\n      ? path.resolve(envFile)\n      : path.resolve(cwd, envFile);\n    const envBuffer = fs.readFileSync(envPath);\n    const envConfig = dotenv.parse(envBuffer);\n    if (envConfig.NODE_ENV) {\n      return envConfig.NODE_ENV;\n    }\n  }\n\n  return 'development';\n};\n\nconst getPackageManager = async ({\n  cwd,\n  env,\n  packageManager,\n}: {\n  cwd: string;\n  env: NodeJS.ProcessEnv;\n  packageManager?: string;\n}) => {\n  if (packageManager) {\n    return packageManager;\n  }\n\n  if (env.npm_execpath) {\n    return env.npm_execpath;\n  }\n\n  const pm = whichPMRuns() || (await preferredPM(cwd));\n  if (pm) {\n    return pm.name;\n  }\n\n  const readResult = readPkgUp.sync({ cwd });\n  if (readResult) {\n    const packageJson = readResult.package;\n    if (packageJson.engines) {\n      const { node, ...engines } = packageJson.engines;\n      const packageManagers = Object.keys(engines).filter((engine) => engine);\n      if (packageManagers[0]) {\n        return packageManagers[0];\n      }\n    }\n  }\n\n  return 'npm';\n};\n\nconst spawn = ({\n  cwd,\n  env,\n  nodeEnv,\n  packageManager,\n  remainingArgv,\n  runScript,\n}: {\n  cwd: string;\n  env: NodeJS.ProcessEnv;\n  nodeEnv: string;\n  packageManager: string;\n  remainingArgv: string[];\n  runScript: string;\n}) => {\n  const command = packageManager;\n  const args = ['run', `${runScript}:${nodeEnv}`, ...remainingArgv];\n  const options: execa.SyncOptions = {\n    cwd,\n    env: { ...env, NODE_ENV: nodeEnv },\n    stdio: 'inherit',\n  };\n\n  return execa(command, args, options);\n};\n\nconst byNodeEnv = async ({\n  cwd = process.cwd(),\n  env = process.env,\n  envFile,\n  packageManager,\n  remainingArgv = [],\n  runScript = 'start',\n}: {\n  cwd?: string;\n  env?: NodeJS.ProcessEnv;\n  envFile?: string;\n  packageManager?: string;\n  remainingArgv?: string[];\n  runScript?: string;\n} = {}) =>\n  spawn({\n    cwd,\n    env,\n    nodeEnv: getNodeEnv({ cwd, env, envFile }),\n    packageManager: await getPackageManager({ cwd, env, packageManager }),\n    remainingArgv,\n    runScript,\n  });\n\nexport default byNodeEnv;\n"],"names":["getNodeEnv","cwd","env","envFile","NODE_ENV","envPath","path","isAbsolute","resolve","envBuffer","fs","readFileSync","envConfig","dotenv","parse","getPackageManager","packageManager","pm","name","readResult","readPkgUp","sync","packageJson","package","engines","packageManagers","Object","keys","filter","engine","npm_execpath","whichPMRuns","preferredPM","spawn","nodeEnv","remainingArgv","runScript","command","args","options","stdio","execa","byNodeEnv","process"],"mappings":"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"}