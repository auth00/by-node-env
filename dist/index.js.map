{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import fs from 'fs';\nimport path from 'path';\n\nimport dotenv from 'dotenv';\nimport execa from 'execa';\nimport preferredPM from 'preferred-pm';\nimport readPkgUp from 'read-pkg-up';\nimport whichPMRuns from 'which-pm-runs';\n\nconst getNodeEnv = ({\n  cwd,\n  env,\n  envFile,\n}: {\n  cwd: string;\n  env: NodeJS.ProcessEnv;\n  envFile?: string;\n}) => {\n  if (env.NODE_ENV) {\n    return env.NODE_ENV;\n  }\n\n  if (envFile) {\n    const envPath = path.isAbsolute(envFile)\n      ? path.resolve(envFile)\n      : path.resolve(cwd, envFile);\n    const envBuffer = fs.readFileSync(envPath);\n    const envConfig = dotenv.parse(envBuffer);\n    if (envConfig.NODE_ENV) {\n      return envConfig.NODE_ENV;\n    }\n  }\n\n  return 'development';\n};\n\nconst getPackageManager = async ({\n  cwd,\n  env,\n  packageManager,\n}: {\n  cwd: string;\n  env: NodeJS.ProcessEnv;\n  packageManager?: string;\n}) => {\n  if (packageManager) {\n    return packageManager;\n  }\n\n  if (env.npm_execpath) {\n    return env.npm_execpath;\n  }\n\n  const pm = whichPMRuns() || (await preferredPM(cwd));\n  if (pm) {\n    return pm.name;\n  }\n\n  const readResult = readPkgUp.sync({ cwd });\n  if (readResult) {\n    const packageJson = readResult.package;\n    if (packageJson.engines) {\n      const { node, ...engines } = packageJson.engines;\n      const packageManagers = Object.keys(engines).filter((engine) => engine);\n      if (packageManagers[0]) {\n        return packageManagers[0];\n      }\n    }\n  }\n\n  return 'npm';\n};\n\nconst spawn = ({\n  cwd,\n  env,\n  nodeEnv,\n  packageManager,\n  remainingArgv,\n  runScript,\n}: {\n  cwd: string;\n  env: NodeJS.ProcessEnv;\n  nodeEnv: string;\n  packageManager: string;\n  remainingArgv: string[];\n  runScript: string;\n}) => {\n  const command = packageManager;\n  const args = ['run', `${runScript}:${nodeEnv}`, ...remainingArgv];\n  const options: execa.SyncOptions = {\n    cwd,\n    env: { ...env, NODE_ENV: nodeEnv },\n    stdio: 'inherit',\n  };\n\n  return execa(command, args, options);\n};\n\nconst byNodeEnv = async ({\n  cwd = process.cwd(),\n  env = process.env,\n  envFile,\n  packageManager,\n  remainingArgv = [],\n  runScript = 'start',\n}: {\n  cwd?: string;\n  env?: NodeJS.ProcessEnv;\n  envFile?: string;\n  packageManager?: string;\n  remainingArgv?: string[];\n  runScript?: string;\n} = {}) =>\n  spawn({\n    cwd,\n    env,\n    nodeEnv: getNodeEnv({ cwd, env, envFile }),\n    packageManager: await getPackageManager({ cwd, env, packageManager }),\n    remainingArgv,\n    runScript,\n  });\n\nexport default byNodeEnv;\n"],"names":["getNodeEnv","cwd","env","envFile","NODE_ENV","envPath","path","isAbsolute","resolve","envBuffer","fs","readFileSync","envConfig","dotenv","parse","getPackageManager","packageManager","pm","name","readResult","readPkgUp","sync","packageJson","package","engines","packageManagers","Object","keys","filter","engine","npm_execpath","whichPMRuns","preferredPM","spawn","nodeEnv","remainingArgv","runScript","command","args","options","stdio","execa","byNodeEnv","process"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA,MAAMA,UAAU,GAAG,CAAC;EAClBC,GADkB;EAElBC,GAFkB;EAGlBC;CAHiB;MASbD,GAAG,CAACE,QAAR,EAAkB;WACTF,GAAG,CAACE,QAAX;;;MAGED,OAAJ,EAAa;UACLE,OAAO,GAAGC,IAAI,CAACC,UAAL,CAAgBJ,OAAhB,IACZG,IAAI,CAACE,OAAL,CAAaL,OAAb,CADY,GAEZG,IAAI,CAACE,OAAL,CAAaP,GAAb,EAAkBE,OAAlB,CAFJ;UAGMM,SAAS,GAAGC,EAAE,CAACC,YAAH,CAAgBN,OAAhB,CAAlB;UACMO,SAAS,GAAGC,MAAM,CAACC,KAAP,CAAaL,SAAb,CAAlB;;QACIG,SAAS,CAACR,QAAd,EAAwB;aACfQ,SAAS,CAACR,QAAjB;;;;SAIG,aAAP;CAxBF;;AA2BA,MAAMW,iBAAiB,aAAU;EAC/Bd,GAD+B;EAE/BC,GAF+B;EAG/Bc;CAHqB;;mBAiBfC;UACFA,EAAJ,EAAQ;eACCA,EAAE,CAACC,IAAV;;;YAGIC,UAAU,GAAGC,SAAS,CAACC,IAAV,CAAe;QAAEpB;OAAjB,CAAnB;;UACIkB,UAAJ,EAAgB;cACRG,WAAW,GAAGH,UAAU,CAACI,OAA/B;;YACID,WAAW,CAACE,OAAhB,EAAyB;uCACMF,WAAW,CAACE,OAAzC;gBAAiBA,OAAjB;;gBACMC,eAAe,GAAGC,MAAM,CAACC,IAAP,CAAYH,OAAZ,EAAqBI,MAArB,CAA6BC,MAAD,IAAYA,MAAxC,CAAxB;;cACIJ,eAAe,CAAC,CAAD,CAAnB,EAAwB;mBACfA,eAAe,CAAC,CAAD,CAAtB;;;;;aAKC,KAAP;;;QAzBIT,cAAJ,EAAoB;6BACXA,cAAP;;;QAGEd,GAAG,CAAC4B,YAAR,EAAsB;6BACb5B,GAAG,CAAC4B,YAAX;;;yBAGSC,WAAW;;gFAAaC,WAAW,CAAC/B,GAAD;GAjBzB;;;CAAvB;;AAqCA,MAAMgC,KAAK,GAAG,CAAC;EACbhC,GADa;EAEbC,GAFa;EAGbgC,OAHa;EAIblB,cAJa;EAKbmB,aALa;EAMbC;CANY;QAeNC,OAAO,GAAGrB,cAAhB;QACMsB,IAAI,GAAG,CAAC,KAAD,KAAWF,aAAaF,SAAxB,EAAmC,GAAGC,aAAtC,CAAb;QACMI,OAAO,GAAsB;IACjCtC,GADiC;IAEjCC,GAAG,eAAOA,GAAP;MAAYE,QAAQ,EAAE8B;MAFQ;IAGjCM,KAAK,EAAE;GAHT;SAMOC,KAAK,CAACJ,OAAD,EAAUC,IAAV,EAAgBC,OAAhB,CAAZ;CAvBF;;AA0BA,MAAMG,SAAS,aAAU;EACvBzC,GAAG,GAAG0C,OAAO,CAAC1C,GAAR,EADiB;EAEvBC,GAAG,GAAGyC,OAAO,CAACzC,GAFS;EAGvBC,OAHuB;EAIvBa,cAJuB;EAKvBmB,aAAa,GAAG,EALO;EAMvBC,SAAS,GAAG;IAQV,EAdW;;wBAkBFpC,UAAU,CAAC;MAAEC,GAAF;MAAOC,GAAP;MAAYC;KAAb,CAlBR;;2BAmBWY,iBAAiB,CAAC;MAAEd,GAAF;MAAOC,GAAP;MAAYc;KAAb,CAnB5B;aAebiB,KAAK,CAAC;QACJhC,GADI;QAEJC,GAFI;QAGJgC,OAAO,aAHH;QAIJlB,cAAc,oBAJV;QAKJmB,aALI;QAMJC;OANG,CAfQ;;;;;CAAf;;;;"}